{
	"nodes":[
		{"id":"45a986eb7349c98a","type":"text","text":"ethereum\nlayer 20\noracle tool\ndecentralized finance\n\n\nrepresentative money è quando hai 10 oro e stampi cartamoneta per 10 oro, fiat money è quando fai un po' il cazzo che ti pare e stampi roba sulla base della fiducia che ti danno e altre magnificenze.\n","x":-189,"y":-149,"width":289,"height":549},
		{"id":"37be4a9f1c9a0573","type":"text","text":"# Hashing e Computational Puzzles\n\nDopo aver effettuato un pagamento (che quindi è stato approvato dal sistema) e ricevuto un bene, un singolo miner prova a modificare la transazione in modo da recuperare i coin spesi. \n\nSi può fare? In teoria sì, ma viene reso estremamente difficile dall'***hashing*** dei blocchi. Ogni blocco ha un valore di hash che dipende dalle transazioni al suo interno, ma anche dall'hash del blocco precedente. Modificare un blocco significa non solo modificare il suo hash, ma rendere inconsistenti tutti gli hash di tutti i blocchi successivi. Un attaccante dovrebbe quindi modificare una sequenza di hash, che è notoriamente un problema difficile da risolvere ma di cui è facile da verificare la soluzione (tuttavia non è formalmente un problema $\\NPH$).\n\nIn virtù della difficoltà del problema, le Blockchain ***PoW*** sfruttano l'hashing per implementare il ***computational puzzle***: solo chi riesce a trovare il giusto hash per il blocco che vuole proporre può aggiungerlo alla Blockchain.\n\nUn'idea di come funziona è il meccanismo usato da ***Bitcoin***: per essere un blocco valido, l'hash in uscita deve avere i $k$ bit meno significativi uguali a $0$.\n\nOra, la funzione di hash (e.g. ***SHA-256*** per Bitcoin) prende in input le transazioni del blocco che voglio far approvare, l'hash del blocco precedente e (oltre ad altra roba che non stiamo a specificare in quanto non utile alla trattazione) un ***nonce***. In generale non ho idea di cosa esca fuori come hash di output, posso solo cambiare il nonce e guardare il risultato.\n\nLa probabilità di trovare proprio quello che voglio (i.e. i $k$ zeri finali) richiede un numero di lanci quantomeno esponenziale per diventare di ordine $1$, da cui la difficoltà probabilistica del problema (si capisce meglio perché non è classificabile come $\\NPH$). Una volta risolto il problema (i.e. trovato il nonce), è facile per gli altri miner verificare la soluzione (basta far girare SHA-256 con i parametri indicati dal miner risolutore).","x":3456,"y":-3486,"width":780,"height":711,"color":"4"},
		{"id":"bc974bfebe38a31d","type":"text","text":"# Creare Cash Digitale\n\nPochi accetterebbero come pagamento il carbone, ma molti accetterebbero i diamanti. Eppure hanno la stessa composizione chimica. Cosa cambia? I diamanti sono rari.\n\nIn generale, se si vuole creare una moneta digitale si deve tenere presente che il suo valore è legato alla sua quantità. Deve quindi esserci in qualche modo \"difficile\" creare nuovo cash.\n\nUna soluzione a questo problema viene direttamente da una tecnica anti-spam per email che risale al 1992 (Dwok, Naor), basata su un principio molto semplice: per inviare una mail devo risolvere un ***computational puzzle*** legato in modo univoco a quella specifica mail, altrimenti questa non partirà. Se risolvere il problema per una mail `A` non dà alcun aiuto per la risoluzione del problema per la mail `B`, allora diventa computazionalmente difficile inviare grandi quantità di mail tutte insieme.\n\nQuesto stesso principio si applica in generale alle Blockchain ***PoW***: il cash viene creato ogni volta che un miner aggiunge un blocco alla blockchain, i.e. solo quando questo è stato in grado di risolvere il computational puzzle. In particolare, la prima transazione di ogni blocco assegna nuovi coin all'indirizzo del miner che sta costruendo quel blocco. \n\n\"Ma così continuo ad erogare all'infinito!\". Ni. In genere esiste un meccanismo di riduzione del reward. In ***Bitcoin***, ad esempio, il reward iniziale era di $50\\,\\BTC$ per blocco, ma il sistema stabilisce che ogni $210\\cdot10^3$ blocchi aggiunti alla Blockchain (in che si traduce in un intervallo di tempo di qualche anno) questo valore si dimezza. Questo consente di dire che in una prima \"era\" sono stati prodotti $21\\cdot10^3\\times50=10.5$ milioni di bitcoin, poi $\\times 25$ e via dicendo. Questa è ovviamente una serie convergente: se le regole restano queste, il massimo numero di Bitcoin in circolo sarà $21$ milioni. Ad oggi il reward è di $3.125\\,\\BTC$. ","x":2426,"y":-3486,"width":780,"height":711,"color":"4"},
		{"id":"7e38a9731b069017","type":"text","text":"# Bitcoin (2008)\n\nIl sistema Bitcoin consta di $O(10^3)$ miner sparsi per il mondo, e il gossiping avviene tra $O(10)$ primi vicini. Dal momento che non sono previsti Smart Contracts, esiste un unico coin: $\\BTC$.\n\nNasce con un primo blocco hard-coded contenente una sola transazione che ha fornito $50\\,\\BTC$ al suo fondatore, dopodiché diversi server si sono proposti come miner ed è iniziato il gioco. Il numero di transazioni per blocco è aumentato con il tempo, e al prima transazione di ogni blocco costituisce il reward per il miner che risolve il problema computazionale, motivo per cui la storia di ogni $\\BTC$ è tracciabile fino alla sua origine.\n\nQuando si esegue una transazione, è consigliato (ma non obbligatorio) pagare una ***fee*** al miner che fa approvare il blocco. Questo perché di fatto è un guadagno per il miner, il quale tenderà a dare priorità di approvazione alle transazioni in mempool con le fee più alte.\n\nIl computational puzzle è \"l'hash in uscita deve avere i $k$ bit meno significativi uguali a $0$\".  la funzione di hash (e.g. ***SHA-256*** per Bitcoin) prende in input le transazioni del blocco che voglio far approvare, l'hash del blocco precedente e (oltre ad altra roba che non stiamo a specificare in quanto non utile alla trattazione) un ***nonce***. In generale non ho idea di cosa esca fuori come hash di output, posso solo cambiare il nonce e guardare il risultato.\n\nLa probabilità di trovare proprio quello che voglio (i.e. i $k$ zeri finali) richiede un numero di lanci quantomeno esponenziale per diventare di ordine $1$, da cui la difficoltà probabilistica del problema (si capisce meglio perché non è classificabile come $\\NPH$). Una volta risolto il problema (i.e. trovato il nonce), è facile per gli altri miner verificare la soluzione (basta far girare SHA-256 con i parametri indicati dal miner risolutore).","x":3456,"y":-5420,"width":780,"height":663,"color":"6"},
		{"id":"0187f418b12b8a18","type":"text","text":"# Tracciabilità\n\nSe è vero che ogni $\\BTC$ è unico, cosa succede se ho $3\\BTC$ e ma voglio spenderne solo uno?\n\nIl punto è che i coin non sono veramente dei coin. Il sistema ***UTXO*** (***Unspent Transaction Output***) intende l'output di una transazione come \"somma non ancora spesa\", piuttosto che come \"moneta\" aggiunta al tuo wallet.\n\nQuesto significa che il saldo del tuo wallet altro non è che la somma degli output di una collezione di transazioni sparse in giro per la blockchain di Bitcoin che hanno in comune il fatto di poter essere cedute a qualcuno usando la private key associata al tuo wallet stesso.\n\nIn tutto questo, ogni output di ogni transazione è detto \"UTXO\", e se (tornando all'esempio di prima) vuoi spendere un $\\BTC$ avendo nel wallet $3\\BTC$ ci sono tre scenari principali:\n\n- Il tuo wallet consta di diversi UTXO, tra cui uno da $1\\BTC$. Ho risolto (sto ignorando le fee);\n- Nel tuo wallet c'è una miriade di UTXO di valore infimo. Il sistema ne \"aggrega\" fino a raggiungere la somma che serve e tramite la transazione li distrugge tutti, creando un nuovo UTXO da $1\\BTC$ utilizzabile dal destinatario;\n- Il tuo wallet consta di un solo UTXO da $3\\BTC$. Il sistema distrugge tale UTXO e ne crea due: uno da $1\\BTC$ per il destinatario ed uno da $1.99\\BTC$ per te (... ci stanno le fee). \n\nOra, manteniamoci nel caso facile in cui la gente si scambia sempre $1\\BTC$. È chiaro che in questo caso è immediato risalire la catena di transazioni che distruggono/creano i vari UTXO fino alla transazione che ha generato quel particolare $\\BTC$.\n\nUn po' meno ovvio è se nel frattempo sono avvenute diverse operazioni di aggregazione e divisione. Resta comunque possibile (anche se più difficile) risalire alla storia di ogni pezzo che compone quel particolare UTXO. Diciamo che un conto sono io che sono curioso di sapere la storia dei miei $\\BTC$ ed un altro conto è l'FBI che cerca di ricostruire i giri di soldi di Silkroad.\n\nIl punto è che per quanto possa essere oscurata da pratiche di ***coin mixing*** o frammentazione, la storia di un UTXO è comunque scritta nella blockchain. Esistono SW come ***Chainalysis*** o ***CipherTrace*** in grado di semplificare molto le cose per gli addetti ai lavori.","x":2426,"y":-6550,"width":780,"height":895,"color":"4"},
		{"id":"e23ed681df359267","type":"text","text":"# Cash Digitale e Blockchain\n\nL'idea di realizzare un sistema di ***cash digitale*** affonda le sue radici verso la seconda metà degli anni 80. Se le prime implementazioni si riducevano a tentativi di implementare modi sicuri per eseguire le transazioni, è con DigiCash (1989) che compaiono i primi coin.\n\nLe moderne criptovalute si basano sulle ***blockchain***: ogni transazione viene inviata ad un server del sistema distribuito, il quale la inoltra agli altri. Dall'insieme delle transazioni in attesa (***mempool***) condiviso (idealmente) da tutti i server viene estratto mediante delle logiche variabili un sottoinsieme (che prende il nome di ***blocco***) da aggiungere alla blockchain. Un singolo server guadagna volta per volta il diritto di farsi portavoce di un blocco (e di ottenere di conseguenza un ***reward***) principalmente in due modi (ne esistono $N$, ovviamente):\n\n- Risolvendo un ***computational puzzle***, se la Blockchain stabilisce un meccanismo di consenso di tipo ***Proof-of-Work*** (***PoW***). In questo caso, i server vengono chiamati ***miner***;\n- \"Bloccando\" una certa quantità di criptovaluta, se si applica un meccanismo ***Proof-of-Stake*** (***PoS***). I server possono avere nomi (i.e. ruoli) variabili a seconda del protocollo.\n\nDeve essere semplice per gli altri server verificare che colui che propone il blocco sia legittimato a farlo (i.e. raggiungere il ***consenso*** su quel server). \n\nLa sequenza dei blocchi approvati costituisce il \"libro mastro\" (***ledger***) delle transazioni.\n\nEsistono ledger la cui implementazione non è una Blockchain (e.g. IOTA).","x":2941,"y":-4376,"width":780,"height":595,"color":"6"},
		{"id":"c0bc01d1e65c717d","type":"text","text":"# Smart Contracts (SC)\n\nQuando si fa una transazione, il problema è sempre lo stesso: io vorrei ricevere il pagamento prima di cedere il bene e l'acquirente vorrebbe essere sicuro di ricevere il bene dopo aver pagato. Questo problema si traduce spesso nella presenza di un intermediario (e.g. un notaio) al quale entrambi i membri dell'accordo delegano la propria fiducia.\n\nGli ***Smart Contracts*** (***SC***) servono ad eliminare l'intermediario e ad automatizzare i contratti, e.g. `Se Andrea versa 100 ETH a Mario, la proprietà del token di Mario passa ad Andrea`. Questa roba è garantita dal fatto che gli SC sono ***codici*** eseguiti direttamente sulla blockchain. Sono ***pubblici***, ***immutabili*** ed ***auto-eseguenti*** al verificarsi delle condizioni.\n\nQuesto rende la blockchain una sorta di *trusted worldwide virtual computer*, in cui posso\n\n- Creare ***asset*** secondari rispetto al ***coin*** principale, detti comunemente ***Token***;\n- Creare dei ***marketplace*** (detti ***Liquidity Pool***) per scambiare gli asset direttamente all'interno della blockchain, senza dover passare per intermediari esterni come Binance.\n\t- Da questi ***Decentralized Exchanges*** (***DEX***) nasce la ***Decentralized Finance*** (***DeFi***).\n\nIl costo computazionale di un'operazione su ***Ethereum*** (e.g. trasferimento di $\\ETH$, creazione di Token) viene quantificato in unità chiamate ***gas***. Esiste quindi un ***prezzo del gas*** legato al valore di $\\ETH$ rispetto al dollaro. Il prodotto tra il prezzo del gas e la quantità di gas richiesta dall'operazione che si vuole effettuare risulta nella ***gas fee*** (i.e. la fee) da pagare alla BC.","x":7026,"y":-4376,"width":780,"height":595,"color":"6"},
		{"id":"40d21f642132b8a5","type":"text","text":"# Liquidity Pool (LP)\n\nIn un CEX è chiaro dove devo andare per la compravendita di asset. In un DEX la piattaforma centralizzata viene sostituita dai singoli utenti, che all'interno di una stessa BC possono mettere sul tavolo, ad esempio, $1000\\,\\ETH$ e $1000$ USDT (***Tether***) e proporsi come Exchange.\n\nUna ***Liquidity Pool*** (***LP***) è un particolare tipo di Smart Contract che permette di fare proprio questo. Un utente che aggiunge fondi (i.e. coppie di token in modo proporzionale rispetto al loro valore attuale) alla LP è detto ***Liquidity Provider***. Ciò include ovviamente il creatore, ma anche tutti gli investitori che contribuiscono. Tutti ricevono una piccola percentuale sugli scambi che avvengono all'interno della LP, proporzionalmente alla quantità di ***LP Tokens*** in loro possesso (i.e. fanno le veci delle quote azionarie per la LP). Tutto ciò è regolato da un modello matematico chiamato ***Automated Market Maker*** (***AMM***).\n\nQuando creo la LP con un rapporto $1:1$ (e.g. metto $1000\\,\\ETH$ e $1000$ USDT) e qualcuno compra $100$ USDT, nella LP restano $1100\\,\\ETH$ e $900$ USDT. Questo però significa che il rapporto non è più $1:1$: USDT è diventato più forte di $\\ETH$. Il prossimo utente che vuole comprare $100$ USDT dovrà pagarli $122\\,\\ETH$.\n\nOra, uno potrebbe chiedersi: ma se USDT è l'equivalente del dollaro, come fa ad acquisire valore così rapidamente? Ecco, se qualcuno vuole venderti $100$ USDT a $122\\,\\ETH$ è sicuramente una truffa. Perché? L'USDT autentico è un token ERC-20 associato ad una ed una sola LP originale (gestita da Tether Limited). Siccome però chiunque può creare una LP ed un ERC-20 con un nome qualsiasi (anche duplicato), è facile restare fregati. Poi magari questo fa un bel ***rug pull*** e gli finanziamo la vacanza ai Caraibi.\n\nOvviamente il modo di controllare se lo scambio è uno scam esiste: confrontare l'indirizzo ufficiale di USDT (e.g. su piattaforme come Etherscan) con quello della LP.","x":7026,"y":-3486,"width":780,"height":705,"color":"4"},
		{"id":"420c6a87906609da","type":"text","text":"# Marketplaces\n\nCon le blockchain è possibile quindi implementare degli ***asset*** digitali. Come in finanza, anche qui il valore di un asset è proporzionale alla fiducia del mercato in esso. Ma come li scambio?\n\n- ***Centralized Exchange*** (***CEX***) - Funzionano come le tradizionali borse. Quando vuoi comprare o vendere parte un ordine (e.g. \"`Vendo 0.1 BTC a chi è disposto a pagarlo 1000$`\") e aspetti che qualcuno dall'altra parte lo accetti;\n\t- L'insieme degli ordini costituisce l'***order book***;\n\t- I wallet sono di proprietà del CEX (i.e. investire $1\\,\\BTC$ su ***Binance*** equivale a darlo alla piattaforma), il che costituisce un importante point of failure (i.e. se il CEX fallisce o viene hackerato perdi i soldi);\n\t- Spesso sono soggetti a regolamentazioni come ***Know Your Customer*** (***KYC***), i.e. sono costretto a fornire i miei dati reali alla piattaforma per investire;\n\t- Si portano dietro tutti i problemi dell'entità centralizzata (e.g. potere di ban di utenti);\n\t- Ne sono esempi ***Binance***, Coinbase e Kraken.\n- ***Decentralized Exchange*** (***DEX***) - All'interno di una BC che supporta gli SC, ogni utente in possesso di una coppia di token (e.g. $\\ETH$ e ***USDT***, affermatosi come l'equivalente digitale su Ethereum del ***dollaro***) può depositarli in una LP diventando un ***Liquidity Provider***.\n\t- Anonimo, in quanto non c'è alcuna politica KYC;\n\t- Il wallet è tuo, nessuno può bloccare i tuoi soldi o bloccare le transazioni;\n\t- Il rischio di ***scam*** è discretamente alto (e.g. ***Front Running*** - Un bot vede che voglio fare una transazione, compra prima di me e rivende subito dopo, alzandomi il prezzo);\n\t- Ne sono esempi ***Uniswap*** su Ethereum e PancakeSwap su Binance Smart Chain.\n\nNe esistono poi altre tipologie, come ***NFT Marketplace*** (e.g. ***Open Sea***, che opera su Ethereum, Polygon e Solana) e Hybrid Exchange (una sorta di mix tra CEX e DEX).\n","x":5016,"y":-3486,"width":780,"height":705,"color":"4"},
		{"id":"f73c6a4e69389480","type":"text","text":"# What Cash Digitale?\n\nL'entità \"analogica\" più vicina ad una moneta digitale è un assegno: erogo un biglietto con la mia firma che indica che il possessore può restituirmelo per ottenere l'equivalente in dollari. Questo assume fondamentalmente due cose:\n\n- È difficile replicare la mia firma (i.e. è difficile falsificare l'assegno);\n\t- È invece molto facile copiare un file. Se a tale file è associato un \"assegno digitale\" (i.e. un coin) potrei duplicarlo e usarlo più volte. Questo problema prende il nome di ***double spending***, e la sua risoluzione ha stuzzicato la curiosità di diversi esponenti del mondo della crittografia;\n- Chi accetta l'assegno si fida del fatto che a fronte di esso qualcuno mi pagherà.\n\t- Questo è equivalente a dire che qualcuno deve garantire che la transazione avvenga. Di norma questo compito spetta alle banche, che fungono da entità garante centrale. L'obiettivo di un DS, tuttavia, è quello di evitare centralizzazioni. Deve quindi essere il DS stesso a fare da garante, obiettivo raggiungibile tramite il ***consenso*** da parte di tutti i server (***miner***) sull'approvazione delle transazioni presenti nei singoli ***blocchi*** della ***blockchain***, i.e. il \"libro mastro\" (***ledger***) di tutte le transazioni.","x":2426,"y":-5333,"width":780,"height":489,"color":"4"},
		{"id":"2825d21211592300","type":"text","text":"# Byzantine Nodes ed Attacco del 51%\n\nIn un sistema del genere, è ovviamente un problema se ci stanno dei ***byzantine nodes***.\n\nTuttavia, Bitcoin ha una discreta tolleranza. Ad esempio, non è possibile per un miner inserire transazioni false ed indirizzare a se stessi i coin altrui. Questo perché per realizzare una transazione serve sempre la chiave privata del vecchio proprietario del coin. Non è neanche possibile fare double spending, dato che ogni coin è unico. Né è possibile modificare una transazione approvata, perché romperebbe tutti gli incastri successivi degli hash.\n\n... o meglio, se sono un singolo miner o un piccolo gruppo di miner che collabora posso fare poco. Se però raggruppo una discreta potenza computazionale (***hashrate***) posso iniziare a vincere spesso. A seconda di quanto ne ho possono succedere diversi scenari simpatici.\n\n- Se ne ho tanto (e.g. sono un governo o una banca) posso provare a ***DDOSsare*** il sistema.\n\t- ***Come?*** - Inserendo blocchi vuoti nella BC per aumentare il carico computazionale, *DDOSsando* direttamente i miner.\n\t- ***Perché?*** - Una banca potrebbe avere interesse a destabilizzare le criptovalute.\n\t- ***È un problema?*** - $\\BTC$ è abbastanza resistente, e non sembra sia mai successo.\n- Se ne ho ***più della metà*** posso fare un pagamento, ricevere quello che mi viene dato e poi ritirare il pagamento invalidando la vecchia chain con una fork (***Attacco del*** $51\\%$).\n\t- ***Come?*** - Avere più della metà dell'hashrate significa essere in grado di costruire un branch alternativo più velocemente rispetto al restante $49\\%$ del sistema. Posso così prima o poi (potenzialmente mi servono tanti blocchi) sovrascrivere il branch del resto del sistema (in cui ho speso $100\\BTC$) con il mio (in cui non l'ho fatto).\n\t- ***Perché?*** - Posso fare double spending: mando agli altri una transazione in cui spendo $100\\BTC$ nel blocco `A` che forma la catena `XXXA` per poi sovrascrivere con `XXXBC`. Particolarmente problematico se supero la catena dopo oltre $6$ blocchi (i.e. dopo che il sistema ha già \"ratificato\" la transazione): posso di nuovo spendere i coin che qualcuno aveva già accettato come pagamento (inviandomi magari la cocaina).\n\t- ***È un problema?*** - Difficile ottenere il $51\\%$ dell'hashrate in Bitcoin. Forse è più fattibile con blockchain più piccole.","x":4546,"y":-6550,"width":780,"height":895,"color":"4"},
		{"id":"66e789f3b5a0ec37","type":"text","text":"# Privacy\n\nBitcoin è un sistema trasparente, i.e. le public key coinvolte nelle transazioni sono sempre in bella mostra sulla blockchain. Tuttavia, l'associazione tra le public key e l'identità della persona fisica dietro quel wallet non è ovvia.\n\nQuindi Bitcoin è anonimo? ... non proprio. Quando uso un ***Exchange*** per convertire i Bitcoin in ***moneta fiat*** (i.e. dollaro, euro, ...) la piattaforma tipicamente richiede una verifica dell'identità nota come ***Know Your Customer*** (***KYC***) nel rispetto delle normative anti-riciclaggio. Questo significa che nel momento in cui converto viene fatta l'associazione tra il nome e il wallet.\n\nQuesto può innescare un processo in cui via via che la gente converte si crea un puzzle in cui diventa sempre più chiaro a chi si estende il giro di soldi, e diventa più facile riempire i vuoti.\n\nIn pratica, Bitcoin non è molto anonimo (piuttosto è ***pseudonimo***, nel senso che finché il gioco regge io sono mascherato dalla mia public key). Ovviamente ci sono tecniche per aumentare il livello di sicurezza di tutto questo.\n\n- Creo tanti wallet per diversificare le attività che svolgo;\n- Al costo di una fee faccio fare le montagne russe ai miei $\\BTC$, dividendoli in milioni di parti e creando flussi di decine di milioni di transazioni (***coin mixing***). In mezzo a questa enorme quantità di flussi è difficile risalire a chi ha fatto cosa. In pratica, è ***Money Laundering***.\n\nQuesto meccanismo di pseudo-anonimato non proprio chiarissimo ha portato nel corso del tempo diverse persone ad essere scoperta con le mani nella marmellata (cfr. ***Silkroad***). \n\nIn generale, se non vuoi farti scoprire mentre traffichi cocaina ci sono blockchain create con in mente la privacy come focus principale (e.g. ***Monero***, ***Zcash***).","x":1386,"y":-6550,"width":780,"height":895,"color":"4"},
		{"id":"b6a85d26a6d762d8","type":"text","text":"# Mai fidarsi dei Nodi (Merkle Trees)\n\nLa blockchain è un oggetto pesante (ad oggi $\\sim 1\\text{ Tb}$ di dati). I ***nodi completi*** la tengono tutta in memoria, ma un utente tiene il proprio wallet su smartphone si chiaramente non può. Allora si limita a salvarne una versione compatta, costruita nel seguente modo.\n\nUn blocco è una sequenza di transazioni, ad ognuna delle quali è associato un ***hash***. Prendo allora coppie contigue di hash e ne faccio un unico hash (i.e. ogni hash rappresenta due transazioni). Continuo così fino a costruire un ***albero binario completo*** che prende il nome di ***merkle tree***. La sua radice rappresenta quindi tutte transazioni del blocco, e viene salvata nell'header di quest'ultimo. Un ***light client*** (nodo leggero) conserva solo l'header del blocco.\n\nUn light client potrebbe avere interesse a verificare se un suo pagamento è stato o meno accettato dalla rete, i.e. se si trova in uno dei blocchi. Questo si traduce nel problema \"data una transazione, controlla che questa sia all'interno di un certo blocco\".\n\nOra, ci vorrebbe poco a chiedere ad un nodo completo \"scusa, questa transazione è davvero nella blockchain?\". Non è così facile. Perché? Il punto è che ***il light client in genere non si fida al 100% del nodo completo***, quindi preferisce verificare da sé. Come? Con una ***Merkle Proof***!\n\nInvece di rispondere semplicemente \"sì\", il nodo completo deve dimostrarmelo. Quindi mi manda tutte le informazioni per permettermi di ricostruire la ***Merkle Root*** (... la radice del Merkle Tree salvata nell'header del blocco). Questo però viene fatto in modo intelligente: invece di mandarmi tutte le $O(N)$ transazioni del blocco, mi manda solo gli $O(\\log N)$ hash dei fratelli con i quali devo via via accoppiare il mio hash per arrivare alla radice.\n\nIn pratica, il Merkle Tree è utile ogni volta che voglio ***verificare che un pezzetto di informazione sia parte di una \"big picture\"***, senza però scaricare interi Terabyte di file!","x":4546,"y":-5432,"width":780,"height":687,"color":"4"},
		{"id":"ef073ac9df95dbd1","type":"text","text":"# Ethereum Request for Comments - ERC\n\nGli Smart Contracts permettono di creare asset secondari scambiabili entro la blockchain stessa, detti ***Token***. Ora, questo significa che chiunque può creare qualsiasi cosa in qualunque formato, ed è proprio per mettere un freno a questa potenziale follia che a qualcuno è venuto in mente di ***standardizzare*** i formati di questi Token.\n\nGli ***standard ERC*** garantiscono che i token siano compatibili con i vari strumenti di DeFi (e.g. wallet, exchange). Ci sono grossomodo due tipologie di Token su Ethereum:\n\n- ***ERC-20*** (***Fungible Tokens***) - Sono token che si comportano come una moneta secondaria rispetto ad $\\ETH$. Sono intercambiabili e divisibili come le valute fiat, e si possono creare particolari token (detti ***stablecoins***) ancorati ad esse (e.g. ***Tether*** (***USDT***) con il ***dollaro***);\n- ***ERC-721*** (***Non-Fungible Tokens***) - Ognuno di questi token è unico e non divisibile. Li si può associare ad un'opera d'arte o ad un oggetto da collezione.\n\nEsistono poi standard come ***ERC-1155***, che unifica i concetti di FT ed NFT per situazioni in cui servono asset diversi (e.g. un gioco ha sia una valuta sia una collezione di oggetti, skin, ...).\n\nNota che esattamente come i RFC su internet non è che questi devono per forza definire il protocollo del secolo. Anche piccole definizioni di funzioni possono costituire un ERC.\n\nAd esempio, ***ERC-165*** definisce delle funzioni di `interfaceID()` che permettono di verificare rapidamente il tipo di compatibilità del contratto senza doverlo analizzare per intero. Per verificare che uno SC sia compatibile con ERC-721, un altro SC può chiamare la sua funzione `supportsInterface(0x80ac58cd)`, ricevendo come risposta `True` in caso affermativo.","x":7026,"y":-5432,"width":780,"height":687,"color":"4"},
		{"id":"bd58e931f55c72e9","type":"text","text":"# Rug Pull\n\nCreare una mia moneta alternativa in un DEX come Ethereum è relativamente semplice.\n\n- Creo uno Smart Contract che rispetta lo standard ERC-20 che chiamo ***Truffa Coin*** (***TC***);\n- Creo uno Smart Contract che definisce una ***Liquidity Pool*** per scambiarlo con gli $\\ETH$. Imposto quindi un valore iniziale, i.e. metto nella Pool $1000\\, \\ETH$ e $1000$ TC. Questo significa dire \"un mio coin vale esattamente quanto un $\\ETH$\".\n\t- Nota che se qualcun altro crea in modo indipendente un altro token chiamato TC, non potrà semplicemente venderlo alla LP in cambio di ETH. Gli scambi nella LP sono vincolati ai soli token originali.\n\nOra, se qualcuno compra $100$ TC al costo di $100\\,\\ETH$, nella LP restano $900$ TC e $1100\\,\\ETH$. Ma il rapporto è sempre $1:1$, quindi ora $1\\, TC={1100\\over900}\\,\\ETH\\sim 1.22\\,\\ETH$. Il fatto che qualcuno abbia dato ***fiducia*** al mio TC acquistandolo lo ha fatto salire di valore, come atteso. Il prossimo che vuole $100$ TC dovrà darmi $122\\,\\ETH$, e così via. L'idea, ovviamente, è che poi possano rivendermi quegli stessi TC ad un prezzo di mercato maggiore, guadagnando con la speculazione.\n\nPiù fiducia darà la gente al TC più $\\ETH$ mi ritroverò sulla mia LP, finché ad un certo punto... la chiudo e sparisco con tutti i soldi. Diciamo che avevo investito $1000$, la gente aveva comprato un po', quindi incasso $4000$, e al netto di $100\\,\\ETH$ di fees ho guadagnato un sacco di $\\ETH$ in barba a chi mi ha ritenuto affidabile. Questa simpatica azione prende il nome di ***Rug Pull*** (i.e. tu metti i soldi sul tappeto e io te lo sfilo da sotto al naso).","x":7026,"y":-2346,"width":780,"height":590,"color":"4"},
		{"id":"8a6b328ab8c2b7cf","type":"text","text":"# Rug Pull - Uno Studio Comparativo\n\nIl paper analizza le manipolazioni di mercato di tipo Rug Pull confrontando due diverse BC:\n\n- ***Ethereum*** - Muove somme di denaro maggiori. Le gas fee tendono ad essere un po' più alte per via della decentralizzazione: avendo migliaia di ***nodi validatori***, la latenza di rete fa sì che venga aggiunto un nuovo blocco ogni $\\sim 13\\,s$, e il ***sync time*** (i.e. quanto bisogna aspettare perché tutti i nodi della rete concordino su una transazione) può arrivare fino ad una settimana. Creare un token ERC-20 costa quindi $O(100\\$)$, arrivando quasi a $O(1000\\$)$ in periodi di congestione, sfavorendo di fatto gli scam a basso prezzo;\n- ***Binance Smart Chain*** (***BSC***) - Ha un'architettura più snella, in cui vengono scelti solo $21$ nodi validatori alla volta, riducendo l'overhead computazionale complessivo. Ne deriva un minore tempo di blocco rispetto ad Ethereum ($\\sim3\\,s$), ma un maggiore sync time ($\\sim 3$ settimane). Da questo derivano costi di creazione molto minori, tipicamente $O(1\\$)$.\n\nPosto che puoi voler creare ERC-20 per svariati motivi, dai dati dello studio emerge che\n\n- Il $60\\%$ dei token ha una vita media inferiore alle $24$ ore. Chiamiamoli ***1-day tokens***;\n- Di questi, su Ethereum il $30\\%$ ha una ***LP associata***, mentre su BSC saliamo al $95\\%$. Questo è facilmente spiegabile in virtù di quanto detto prima: Ethereum costa di più;\n- L'$1\\%$ degli account crea il $20\\%$ dei token. Chiamiamoli ***Token Spammers***.\n\t- La maggior parte di questi sono 1-day tokens;\n\t- Quello più attivo su BSC ha creato $20\\text{k}$ token in un anno, il che significa che ha speso almeno $20\\text{k }\\$$. Perché abbia senso fare questa cosa, è logico pensare ad un guadagno effettivo maggiore, il che ci porta a dedurre che c'è un giro di soldi ancora maggiore.\n\nDa tutto questo si arriva a concludere che ***circa l'$80\\%$ delle LP contenenti 1-day tokens sono rug pulls***. Il success rate si aggira intorno al $62\\%$ su Ethereum e al $40\\%$ su BSC (forse per un meccanismo di tipo \"mi fido di più se ci sono investimenti di grosse somme, chissà), con un average gain di $2500\\$$ su Ethereum e $33\\$$ su BSC (le fees complessive sono in media $380\\$$ e $9\\$$). ","x":7026,"y":-1620,"width":780,"height":759,"color":"4"},
		{"id":"b55611606993630d","type":"text","text":"\n\"Cos'è emptygocks? O qualcosa di simile, credo sia correlato alle blockchain\"\n\n\"Probabilmente ti riferisci a **Mt. Gox**, uno dei primi e più noti exchange di Bitcoin. Fondato nel 2010 e con sede a Tokyo, Mt. Gox gestiva oltre il 70% delle transazioni globali di Bitcoin al suo apice. Nel 2014, l'exchange ha dichiarato bancarotta dopo aver perso centinaia di migliaia di Bitcoin, presumibilmente a causa di un hack. Questo evento ha avuto un impatto significativo sulla fiducia nel mercato delle criptovalute.\"","x":5016,"y":-3880,"width":780,"height":198,"color":"#b48383"},
		{"id":"ca2750dfcadcc2cb","type":"text","text":"# How to Rug Pull\n\n- Creo il token e la LP associata, usando come coin comparativo una roba forte (e.g. $\\ETH$);\n- Aspetto l'allocco che compra. Questa fase in linea di principio è ***zero-effort***: di norma, è facile che arrivi qualcuno a comprare, un po' perché la gente c'ha la ***FOMO*** (\"e se questo coso diventa una roba che vale tantissimo?! Che fai, non compri?!\". Sì, davvero), un po' perché in ogni caso ci stanno gli ***sniper bot***;\n\t- Al più puoi fare ***advertising***, i.e. pubblicizzare questo nuovo incredibile token su Telegram, Discord o X (notoriamente dei bei posti). E la gente? Eh, la gente piazza scommesse sulle corse clandestine di cani, vuoi che non faccia un po' di sano ***gambling*** in criptovalute? Qualcuno magari pensa anche di riuscire a comprare subito ad un prezzo basso per poi rivendere quando l'hype generale avrà fatto salire il prezzo. Probabilmente non sanno che uno sniper bot fa esattamente questo, ma ad una velocità di svariati ordini di grandezza superiore.\n- Quando il valore è cresciuto e mi ritrovo con abbastanza $\\ETH$ nella Poll, disinvesto. Il guadagno sarà dato dagli investimenti dei vari allocchi meno le fees per fare tutte queste transazioni (che su Ethereum sono comunque un po' di soldi, motivo per cui non è proprio immediato fregare soldi al sistema);\n- In ogni caso, chi ha comprato ha buttato i soldi.\n\nEthereum ha circa $300\\text{k}$ token attivi, BSC essendo più economica ne ha molti di più.","x":8106,"y":-1522,"width":780,"height":563,"color":"4"},
		{"id":"313585cc249c3349","type":"text","text":"# Altre Considerazioni\n\n - Il paper stima che i rug pull abbiano generato circa **240 milioni di dollari di profitti** totali, con Ethereum che ha generato **150 milioni** e BSC **91 milioni**. Inoltre, il volume totale delle operazioni di rug pull è stato di **772 milioni di dollari su Ethereum** e **243 milioni su BSC**.\n - Il paper identifica tre fasi principali:\n\t - **DeFi Summer 2020** – Crescita iniziale dei rug pull su Ethereum.\n    - **Altcoin Season 2021** – Rug pull esplodono su entrambe le blockchain a causa dell’hype sulle altcoin.\n    - **Superamento di Ethereum da parte di BSC** – Da ottobre 2021, i rug pull su BSC diventano più numerosi e più redditizi di quelli su Ethereum.\n- Il paper distingue tra diversi tipi di sniper bot e quantifica il loro impatto:\n     - Su **BSC**, 130 indirizzi sospetti hanno scambiato in **235.777 liquidity pool**, rappresentando il **68,7% di tutti i rug pull**.\n    - Su **Ethereum**, gli sniper bot sono meno presenti, ma il **60% degli swap avviene nello stesso blocco in cui viene creata la LP**, segno che stanno leggendo la mempool.\n- Alcuni rug pull usano strategie di **wash trading** per gonfiare artificialmente il volume della LP e attirare investitori.\n- Il paper suggerisce alcune metriche per identificare i rug pull, come:\n    - Se il token dura meno di 24 ore, è sospetto.\n    - Se un singolo wallet controlla tutta la liquidità, è un rischio.\n    - Identificare chi ha già eseguito rug pull in passato.\n    - Molti truffatori usano nomi di aziende famose o meme coin per attirare investitori.","x":7026,"y":-640,"width":780,"height":640,"color":"5"},
		{"id":"32adeffc3526776e","type":"text","text":"# Sniper Bots\n\nMa chi è abbastanza matto da comprare un token sconosciuto?\n\nPur vero che alla gente piace fare gambling, un bot può farlo in maniera molto più efficiente. Se l'obiettivo è comprare più velocemente possibile per poi rivendere a prezzo maggiorato, un bot può ad esempio analizzare la ***mempool*** e scoprire in anticipo quale token sta per essere creato sulla BC. In questo modo ha maggiori probabilità di essere il primo acquirente, per poi ovviamente rivendere dopo quello che arriva secondo.\n\nQuesti ***Sniper Bot*** sono tipicamente a pagamento, perché hanno un'ottima probabilità di portare guadagni. Maggiori di quello che costano? È da capire, ma intanto l'idea funziona. Ci sono anche quelli gratuiti, ma hanno un altissimo tasso di fallimento (magari vengono messi in circolo proprio da quelli che usano gli sniper bot potenti, in modo da avere dei concorrenti dichiaratamente deboli il cui unico scopo è perdere).\n\nOra, esistono casi di gente che ha implementato meccanismi in grado di fregare persino i bot. Ad esempio, un tizio una volta ha creato un token senza la primitiva di vendita. Cioè, la gente poteva letteralmente solo acquistare. Visto che nessuno poteva rivendergli i suoi Truffa Coin, questo ha banalmente aspettato e dopo un po' ha disinvestito, guadagnando diversi milioni.\n\nA seguito di questo, i bot hanno implementato una fase preventiva: intanto provo ad acquistare la minima quantità possibile di token. Poi, se riesco a rivendere, faccio un acquisto serio.","x":8106,"y":-607,"width":780,"height":575,"color":"4"},
		{"id":"d006bd8a921bcf16","type":"text","text":"# **Perché mi compaiono token strani nel wallet?**\n\nSe hai mai aperto il tuo wallet e trovato un token che non hai mai comprato – tipo `SuperMegaApeCoin69420` – sappi che **non hai vinto nulla** e **nessuno ti sta regalando soldi**. Benvenuto nel mondo degli **airdrop scam**.\n\n---\n\n### **Come funziona la truffa?**\n\n1. **Gli scammer creano un token ERC-20**\n    \n    - Nome accattivante, magari simile a un token famoso (`SHIBA INU 2.0`, `NEW USDT`, `BONK v2`).\n    - Simbolo simile a uno vero (`USDTX`, `WBTCV`).\n    - Magari un supply assurdo (tipo 1 quadrilione di token).\n2. **Distribuiscono il token a migliaia di indirizzi**\n    \n    - I wallet su Ethereum sono pubblici, quindi possono mandare token a chiunque.\n    - Usano bot per distribuire il token a centinaia di migliaia di indirizzi casuali.\n    - Tu lo trovi nel wallet e pensi: _\"Wow, ho ricevuto un airdrop gratuito!\"_\n3. **Ti fanno cascare nella trappola**\n    \n    - Se provi a venderlo o trasferirlo, BAM! Scatta il vero scam.\n    - Alcuni di questi token sono progettati per **bloccare i tuoi fondi**: quando interagisci con il loro smart contract, dai il permesso di spendere tutto il tuo ETH.\n    - Altri ti mandano su un sito fake tipo `SuperMegaApeSwap.com` dove ti chiedono di connettere il wallet e autorizzare transazioni fasulle.\n\n---\n\n### **Come proteggersi?**\n\n✅ **Non interagire mai con token che non hai comprato.**  \n✅ **Non andare su siti a caso suggeriti da questi progetti.**  \n✅ **Non approvare transazioni se non sai esattamente cosa stai facendo.**  \n✅ **Se proprio vuoi liberartene, nascondili nel wallet o bruciali con un tool sicuro.**\n\nSe trovi un token sconosciuto nel wallet, **ignoralo e vai avanti con la tua vita**. Perché se qualcosa sembra troppo bello per essere vero… beh, sai già come finisce. 🚀","x":7026,"y":-7620,"width":780,"height":946,"color":"#4545ff"},
		{"id":"4e3449fd770ccfb1","type":"text","text":"### **Le truffe più famose nel mondo cripto (oltre ai Rug Pull e agli Airdrop Scam)**\n\nNel mondo delle criptovalute, la fantasia degli scammer è infinita. Se pensavi che i rug pull e gli airdrop scam fossero le uniche fregature in circolazione, sappi che siamo solo all’inizio. Vediamo alcune delle truffe più note e geniali (nel senso malvagio del termine).\n\n---\n\n### **1️⃣ Exit Scam – La fuga col bottino**\n\n**Schema:** Crei un progetto, attiri investitori, raccogli fondi… e sparisci.\n\n✅ **Esempio famoso: PlusToken ($3 miliardi rubati)**\n\n- Prometteva rendimenti assurdi a chi depositava BTC ed ETH.\n- Milioni di persone hanno abboccato.\n- Gli sviluppatori hanno incassato e si sono volatilizzati, lasciando gli utenti con il nulla.\n\n📌 **Come evitarlo?**\n\n- Diffida da progetti che **promettono rendimenti fissi e sicuri** (in cripto, niente è sicuro).\n- Se non c'è un team pubblico e verificabile, scappa.\n\n---\n\n### **2️⃣ Ponzi e Schemi Piramidali**\n\n**Schema:** Ti promettono un guadagno “garantito” se porti dentro altre persone. I nuovi soldi pagano i vecchi investitori. Finché dura.\n\n✅ **Esempio famoso: Bitconnect ($2 miliardi bruciati)**\n\n- \"Investi in Bitconnect, guadagni il 40% al mese!\"\n- Milioni di utenti dentro, il valore del token sale alle stelle.\n- Il sistema crolla quando non entrano più nuovi soldi.\n- Il prezzo di BCC passa da 400$ a quasi **zero** in poche ore.\n\n📌 **Come evitarlo?**\n\n- Se il guadagno dipende più dal reclutare gente che dall’effettivo investimento, **è una piramide**.\n- Se sembra troppo bello per essere vero… lo è.\n\n---\n\n### **3️⃣ Honeypot – Il finto banchetto**\n\n**Schema:** Crei un token con un prezzo in crescita, la gente compra… ma non può vendere.\n\n✅ **Come funziona?**\n\n- Uno smart contract modificato per impedire agli utenti di vendere.\n- Gli unici che possono incassare sono gli sviluppatori.\n- La gente compra pensando di fare il colpo della vita, ma il bottone \"Sell\" è solo decorativo.\n\n📌 **Come evitarlo?**\n\n- Controlla se il contratto del token è verificato e open-source.\n- Usa tool come Token Sniffer per vedere se il token ha limitazioni nelle vendite.\n\n---\n\n### **4️⃣ Pump & Dump – Il gioco dello squalo**\n\n**Schema:** Un gruppo di persone si organizza per comprare un token, farne salire il prezzo e poi rivenderlo a chi arriva tardi.\n\n✅ **Esempio famoso: Dogecoin (sì, anche DOGE)**\n\n- Ogni volta che Elon Musk twitta su DOGE, il prezzo esplode.\n- Chi sa prima compra a basso prezzo.\n- I ritardatari comprano in FOMO.\n- I primi vendono in cima al pump e il prezzo crolla.\n\n📌 **Come evitarlo?**\n\n- Se un token sale del **500% in poche ore**, probabilmente qualcuno sta facendo il dump.\n- Non inseguire il prezzo, fai ricerche prima di comprare.\n\n---\n\n### **5️⃣ Flash Loan Attack – Il colpo al sistema**\n\n**Schema:** Prendi in prestito una cifra enorme senza collaterale, manipoli il prezzo di un token, incassi e ripaghi il prestito in un'unica transazione.\n\n✅ **Esempio famoso: Il caso dYdX e bZx ($55 milioni persi)**\n\n- Un hacker ha preso un prestito flash di milioni di dollari.\n- Ha manipolato il prezzo di un asset su un DEX.\n- Ha scambiato il token manipolato per cripto reali.\n- Ha ripagato il prestito e ha incassato la differenza.\n\n📌 **Come evitarlo?**\n\n- Se usi piattaforme DeFi, assicurati che abbiano misure anti-flash loan.\n- Segui i progetti con audit di sicurezza solido.\n\n---\n\n### **6️⃣ Wallet Drainer – Il furto in un click**\n\n**Schema:** Ti fanno firmare una transazione che, in realtà, gli dà accesso al tuo wallet.\n\n✅ **Come funziona?**\n\n- Ti mandano un link a un sito fake che sembra un wallet reale.\n- Ti chiedono di collegare il wallet e approvare una transazione.\n- Se lo fai, gli dai accesso ai tuoi fondi e… addio.\n\n📌 **Come evitarlo?**\n\n- Non cliccare su link sospetti o pubblicizzati a caso.\n- Usa wallet hardware per operazioni importanti.\n\n---\n\n### **Conclusione**\n\nIl mondo cripto è una giungla piena di opportunità, ma anche di trappole. La regola d’oro? **Se non capisci come funziona qualcosa, non investirci un centesimo.**","x":9146,"y":-7620,"width":878,"height":2875,"color":"#4545ff"},
		{"id":"9a26a8530886011a","type":"text","text":"# HowToBlockchain - An Overview\n\nSe ho un file che rappresenta del cash digitale, potrei in linea di principio darlo a più utenti (i.e. ***double spending***). Per ovviare a questo problema, si costruisce un sistema distribuito di server che in ogni istante posseggono una copia aggiornata del libro mastro (***ledger***) di tutte le transazioni, tipicamente implementato tramite una ***blockchain***. Concordare in ogni istante sull'intero storico di tutte le transazioni significa risolvere un problema di ***randomized consensus*** in un ***asynchronous system***.\n\nOgni ***coin*** è in ogni istante di proprietà di una singola persona (i.e. un singolo ***wallet***). A certificare questa cosa c'era inizialmente una Central Authority (e.g. una banca), dopodiché si è passati al seguente sistema decentralizzato (detto ***UTXO***, ***Unspent Transaction Output***):\n\n- La creazione di un coin avviene come output di una ***transazione*** sulla blockchain. Questa è l'unica entità che salva le informazioni relative a \"chi possiede cosa\", dove il \"chi\" consta di un ***hash*** derivato dalla ***public key*** di un wallet, il cosa è un ***amount***;\n\t- Segue che il wallet di per sé non contiene nulla. Piuttosto, la sua ***private key*** serve a certificare che questo ha **potere di cedere i coin associati alla sua public key** sulla blockchain.\n- Quando viene ceduto, l'operazione prende in input il vecchio hash, la private key del vecchio proprietario e la public key del nuovo (oltre a cose tecniche tipo l'hash del blocco in cui rientra tale operazione, un nonce, ...) generando una transazione che certifica il nuovo proprietario;\n\t- L'amount in output in genere è minore dell'input: la differenza costituisce la ***fee*** per il ***miner*** che fa approvare il proprio blocco con il randomized consensus della blockchain (e.g. PoW, PoS, ...).\n- Quando un server riceve una richiesta di transazione, questa viene inserita nella ***mempool*** (i.e. il set di tutte le transazioni in attesa) e divulgata in ***broadcast*** (o più comunemente facendo ***gossiping***) a tutti gli altri server. I server inseriscono le transazioni della mempool in un ***blocco*** che cercano di far approvare tramite il randomized consensus all'intero sistema distribuito.\n\nQuesto sistema, adottato ad esempio in ***Bitcoin***, consente di tracciare l'intera storia di ogni singolo coin.\n\nEsistono sistemi alternativi, come ***Account-Based*** (e.g. ***Ethereum***). Qui i wallet hanno un saldo effettivo (che sostituisce il concetto di \"coin\" di per sé), ed è questo valore che viene aggiornato nelle transazioni. \n\nPiù in generale, ogni blockchain ha un funzionamento unico. La grande differenza in questo senso è data dalla presenza o meno degli ***Smart Contracts*** (i.e. la possibilità di eseguire codice direttamente sulla blockchain stessa), introdotti da Ethereum ed oggi largamente utilizzati.","x":480,"y":-3600,"width":860,"height":932,"color":"4"},
		{"id":"704b2682f6ccaf20","type":"text","text":"# Listone delle Blockchain\n\n- Algorand - fa transactions ogni pochi secondi, fee prederterminate e basse\n- Arbitrum - Gas fee\n- Avalanche - Gas fee\n- ***Bitcoin*** - Fee proporzionali alla dimensione in byte della transazione, posso scegliere fee più alte per ottenere priorità entro la mempool\n\t- Litecoin, Dogecoin\n- Binance Smart Chain (BSC) - Supporta SC, gas fee\n- Cardano - \n- C-Chain - Gas fee\n- Cosmos - \n- ***Ethereum*** - Inizialmente nata PoW (2015) tramite un investimento iniziale di circa 18 milioni di dollari, introduce il concetto di ***Smart Contract***. Per risolvere problemi legati ad efficienza energetica ed eccessivo volume di transazioni crea nel 2020 una Blockchain PoS parallela (Beacon Chain). A seguito dell'evidente successo di quest'ultima, nel 2022 le due chain vengono unificate in un evento cosmico che prende il nome di \"***The Merge***\". Abbandonare il mining riduce i consumi energetici del sistema del 99.5%;\n- Hedera Hashgraph - In realtà non è una Blockchain. È basata invece su una struttura dati a **grafo aciclico diretto (DAG)**, ed usa un algoritmo di consenso simile al PoS;\n- Monero - \n- Optimism\n- Polkadot - \n- Solana - \n- Tezos - \n- Tron - ","x":480,"y":-5319,"width":860,"height":819},
		{"id":"8689b6a4e7e83f20","type":"text","text":"# ERC-721 - NFT\n\nERC-721 introduce il concetto di ***unicità***. Gli NFT rappresentano arte digitale, oggetti interni ai videogiochi (e.g. armi, skin), biglietti, collezionabili e via dicendo. Proprio come con l'arte, il suo valore è dato da quanto è bramato dalla ggente. Le sue funzioni principali definiscono\n\n- La creazione dell'NFT, i.e. `mint(token)`;\n- La sua identità, i.e. `name()`, `symbol()` e `tokenURI(token)`. Quest'ultima in particolare contiene immagine, descrizione e metadati, solitamente salvati su un server esterno;\n\t- Questo rappresenta anche un importante ***point of failure*** per gli NFT: non vengono salvati davvero sulla blockchain. Qualsiasi problema al server esterno che custodisce l'asset e *puff*, hai perso tutto.\n- Il suo proprietario, i.e. `ownerOf(token)`;\n- Il suo trasferimento, con `transferFrom(from, to, token)`;\n- La sua distruzione, i.e. `burn(token)`.\n\nUn singolo ERC-721 può in realtà creare diverse copie dell'NFT, che nel complesso prendono il nome di ***collezione***. Un NFT è dunque completamente identificato da due elementi:\n\n- L'indirizzo dello SC che lo ha creato (ed il nome, e.g. ***Bored Ape***);\n- Il suo numero seriale all'interno della collezione (***Token ID***, e.g. $152$).\n\nLa stragrande maggioranza degli NFT non è legata ad alcun valore reale, è piuttosto uno ***strumento speculativo*** fortemente volatile ed utilizzato per manipolazioni di mercato quali ***Rug Pull*** e ***Wash Trading***.","x":8106,"y":-5432,"width":780,"height":687,"color":"4"},
		{"id":"85fc8a05c99ff340","type":"text","text":"# NFT Wash Trading - Uno Studio\n\nL'idea alla base del Wash Trading è molto semplice. Metto in vendita un NFT a $10$, il mio complice lo acquista e lo rivende a $100$, poi a $1000$. Il primo genio esterno al mio circolo chiuso di complici che pensa \"hey ma questo è stato venduto a $1000$ e ora costa solo $100$, è un affare!\" diventa il pollo spennato di turno.\n\nDopo aver raccolto i dati (i.e. eventi di tipo `transferFrom`), per ogni NFT costruisco un grafo in cui i nodi rappresentano gli account e gli archi i trasferimenti, etichettati con `timestamp` e `valore` della transazione. L'idea è che ***strong connected components*** e ***loops*** siano dei buoni indicatori per la presenza di Wash Trading. Quindi cerco\n\n- ***Loop*** - Se trovo `A → B → A` è possibile che `A` e `B` siano la stessa persona, o complici;\n- ***Common Founder*** - Un terzo account (esterno) fornisce l’NFT ad `A` e `B`, i quali procedono a scambiarselo secondo le modalità descritte sopra;\n- ***Common Exit*** - Stessa cosa ma al contrario. Dopo il wash trading, i soldi finiti a `B` vengono inviati a un terzo account `C` (probabilmente il vero destinatario della truffa);\n- ***Self-loops*** - `A` può vendere un NFT a sé stesso (sì, si può fare, paghi solo le fee).\n\nSe in questi cicli compaiono piattaforme CEX o LP allora vengono ignorati. Si assume che i CEX non siano coinvolti nel WT (sono loro richieste politiche di trasparenza che li metterebbero rapidamente nei guai), e le Pool usano NFT per rappresentare posizioni di liquidità.\n\nQuesto però non esclude la presenza degli ***NFC Marketplaces***, perché prima o poi questi NFT vanno rivenduti a qualcuno. Chi più chi meno, ci finiscono tutti in mezzo (e.g. ***LooksRare*** presenta un $80\\%$ del volume di traffico legato al WT, mentre su OpenSea è $<0.5\\%$).\n\nLooksRare era infestato di wash trader perché aveva un forte ***Token Reward System***: Se il marketplace aveva un volume di trading totale di $1000\\,\\ETH$ e tu ne generavi $100$, ottenevi il $10\\%$ dei reward. Quindi, gli scammer si scambiavano NFT tra loro per accumulare reward, facendo milioni, finché il sistema di incentivi non è stato abbassato.\n\nIl modo migliore per gonfiare i volumi di trading era usare i ***flash loans***, i.e. prestiti che devi ripagare nello stesso blocco in cui vengono richiesti. Questo porta enormi vantaggi: le fees sono praticamente ***zero***, e se non ripaghi la transazione viene semplicemente annullata. \n\nQuindi? Prendevi diversi milioni in flash loan, ti scambiavi NFT tra amichetti per gonfiare il prezzo, incassavi i reward di LooksRare, e ripagavi il prestito senza perdere un centesimo.\nOvviamente questo aveva senso finché i reward erano alti, ora il gioco non vale la candela.","x":5796,"y":-2346,"width":780,"height":944,"color":"4"},
		{"id":"54b251eb5f580875","type":"text","text":"# Gas Fee\n\nSe in Bitcoin e BC simili il costo della fee è semplicemente proporzionale alla lunghezza in byte della transazione, ***Ethereum*** e BC simili usano un meccanismo per le ***fee*** che dipende dalla ***potenza computazionale*** che verrà utilizzata e dal livello di ***congestione*** della rete.\n\nLa fee è quindi divisa in due parti:\n\n- ***Gas limit*** - Quante unità di gas servono per eseguire la transazione. Dipende dalla complessità computazionale dello SC, solitamente si aggira tra i $20\\text{k}$ e i $300\\text{k}$;\n- ***Gas price*** - Il prezzo della singola unità di gas, tipicamente espresso in Gwei. Esiste un prezzo minimo, ma può essere scelto dall'utente per alzare la fee (i.e. acquisire priorità).\n\nLa ***gas fee*** è quindi data dal prodotto di queste due grandezze. È poi possibile aggiungere una ulteriore ed esplicita ***priority fee*** (anche detta ***tip***) per acquisire ancora più priorità.\n\nLa ***base fee*** (i.e. il gas price minimo sotto al quale l'utente non può scendere) è determinata in automatico dal protocollo in base alla congestione della rete.\n\nIn sostanza, l'idea è \"comprare\" la potenza computazionale dei nodi che eseguono lo SC.","x":5796,"y":-5432,"width":780,"height":687,"color":"4"},
		{"id":"af09c1c6572f2db1","type":"text","text":"# HowToCEX\n\nEsattamente come una ***borsa***. Ogni criptovaluta ivi quotata ha due elementi di interesse:\n\n- ***Candlesticks*** - Le candele rappresentano la differenza tra il prezzo di apertura e di chiusura. Sono rosse se il prezzo è sceso, verdi se è salito. Si possono poi aggiungere delle \"stanghette\" che rappresentano eventuali massimi o minimi nel corso del periodo intercorso tra apertura e chiusura (tipicamente un giorno, ma può variare);\n- ***Order Book*** - Raccoglie tutti gli ordini del tipo \"`Voglio comprare 1 BTC a 1000$`\". Se però non c'è nessuno disposto a vendere a quel prezzo (e.g. il più basso è `Voglio vendere 1 BTC a 2000$`), l'ordine resta in sospeso. ***Il punto di incontro tra domanda e offerta è il prezzo***. Quando due ordini si incontrano, viene effettuata la transazione.\n\t- Un ordine in cui stabilisco io il prezzo è detto ***limit order***. Se nessuno compra/vende a quella cifra, l'affare non si conclude e resta in sospeso a tempo indeterminato;\n\t- Un ordine in cui dico `Voglio comprare 1 BTC al miglior prezzo disponibile` è detto ***market order***, e prenderà il `Voglio vendere 1 BTC a XXXX$` con `XXXX` più basso possibile. Questo definirà di conseguenza il prezzo di mercato di $\\BTC$.\n- \"Semplificare\" due ordini di tipo `Vendo 1 BTC a 1000$` e `Compro 1 BTC a 1000$` significa che i prossimi ordini più vicini saranno ad esempio `Vendo 1 BTC a 1100$` e `Compro 1 BTC a 900$`. E quindi qual è il nuovo prezzo di mercato?\n\t- Finché nessuno fa nulla, vale l'ultima \"semplificazione\": il prezzo resta `1000$`. Si nota però che l'order book ha un \"buco\". E quindi? I limit order restano in sospeso, a meno che qualcuno non faccia un market order: `Compro 1 BTC al miglior prezzo` significa pagarlo `1100$`, il che porta il prezzo di mercato a `1100$`.","x":4236,"y":-2346,"width":780,"height":637,"color":"4"},
		{"id":"cf185f8837214b5e","type":"text","text":"# Pump and Dump\n\nUna volta compreso come funziona un CEX, diventa chiaro il meccanismo di ***pump and dump***.\n\n- Compro qualcosa che non vale niente, e.g. una criptovaluta sconosciuta;\n- Convinco gli altri a comprare, facendo crescere il valore (***pump***). Questa è una fase fortemente attiva, e include pubblicità su canali Telegram dedicati;\n\t- Gli admin del canale solitamente preannunciano un \"grande affare\" imminente, ma non dicono subito quale. L'idea è che la crescita sia un'impennata di pochi secondi, al più pochi minuti. Questo ha due motivazioni psicologiche principali:\n\t\t- Sfruttare al massimo la ***FOMO*** degli investitori, che avendo pochissimo tempo a disposizione agiranno prima ancora di pensare;\n\t\t- Minimizzare i comportamenti ***FUD*** (Fear, Uncertainty and Doubt), ripensamenti e commenti scettici (che in ogni caso vengono moderati in modo feroce).\n\t- Poi, visto che non c'è limite alla speculazione: vuoi ricevere il nome della criptovaluta `1` secondo prima? Compra per la modica somma di `10$` una `Membership Premium`! Come dici? `3` secondi prima? A `50$` abbiamo il `Piano VIP`!\n\t\t- Ovviamente tutte queste cose sono scam, ci perderai comunque i soldi al $99\\%$.\n\t- Va anche molto di moda diffondere notizie false come `Truffa Coin comprato dal governo italiano!!` o messaggi motivazionali come `Oggi facciamo la storia.`;\n\t- Manco a dirlo, tutto questo è chiaro conflitto di interesse (cfr. The Wolf of Wall Street), ma ovviamente non c'è alcuna regolamentazione a riguardo.\n- A un certo punto vendo e ci guadagno un botto. Il prezzo inizia a scendere (***dump***), meno vertiginosamente rispetto alla salita. Gli altri si ritrovano il cerino in mano.","x":4236,"y":-1620,"width":780,"height":647,"color":"4"},
		{"id":"962f6c4b3c0be25d","type":"text","text":"# Pump and Dump Detection - [Uno studio](https://github.com/SystemsLab-Sapienza/pump-and-dump-dataset)\n\nÈ facile individuare un pump quando è già esploso: basta guardare un grafico con una candela verde enorme ed un crollo altrettanto rapido subito dopo. L'obiettivo del paper è quindi un altro: possiamo accorgerci di un pump mentre sta accadendo?\n\nL'idea è sviluppare un modello di Machine Learning che monitora il mercato ed è in grado di dire entro pochi secondi se c'è o meno una pump in azione. Per fare ciò, il parametro principale è il numero di ordini, ed in particolare la presenza di ***rush orders***, i.e. una raffica di ordini di acquisto in pochi secondi. Questi dati sono forniti direttamente dalle API del CEX.\n\nQuali? Un CEX come Binance quota tipicamente coin abbastanza stabili, ed è più controllato. Sono invece ideali CEX minori come ***Cryptopia*** e ***YoBit*** (il quale arrivò perfino a pubblicare un pump su Twitter, nel 2018).\n\nSono stati quindi forniti gli stessi dati in pasto a diversi modelli:\n\n- ***Thresholds statiche*** - Pessimi risultati, ma c'era da aspettarselo, non è neanche ML;\n- ***Random Forest*** - Il migliore, presenta un F1-Score del $94.5\\%$ ed è in grado di rilevare un pump entro i primi $25$ secondi dal suo inizio;\n- ***AdaBoost*** - Meno efficace, restituisce molti falsi positivi (che tendono in ogni caso ad aumentare nei periodi di maggiore attività sul mercato).\n\n","x":4236,"y":-878,"width":780,"height":558,"color":"4"},
		{"id":"d1bdc75d4a561ac5","type":"text","text":"# Difendersi dai Pump and Dump\n\nSe creo una blockchain e il mio coin viene preso di mira da un Pump and Dump, non sono proprio felicissimo, perché mina la mia credibilità. Da cui la domanda: come mi difendo?\n\nEcco... diciamo che non ti difendi. Per quanto sia una pratica immorale (non diciamo illegale perché banalmente non è regolamentata), il problema è che ***i CEX ci guadagnano***, perché implica la presenza di grossi volumi scambiati su di essi. Possono anche pubblicizzare delle policies moralmente impeccabili, ma all'atto pratico non faranno niente per evitarlo.\n\nSe crei un token su DEX, è anzitutto la struttura stessa delle LP a proteggerti da questo tipo di cose: non essendoci un order book, acquistare significa istantaneamente far esplodere il prezzo, quindi dovresti trovare gente convinta a comprare a prezzi già alti. Inoltre, gli SC ti permettono di avere un po' più di gioco sulle funzioni di compravendita, tipo\n\n- Aumenti le fee sulle transazioni di account che comprano e vendono in pochi secondi;\n- Metti limiti di volume di acquisto per indirizzo;\n- Metti un cooldown al di sotto del quale non puoi rivendere.\n\nTutto questo però è un disincentivo per i trader \"legittimi\". Troppe regole.","x":3066,"y":-1620,"width":780,"height":647,"color":"4"},
		{"id":"f25620bcdd9ec501","type":"text","text":"# Altre Considerazioni\n\n- **Distinzione tra Pump and Dump classico e Crowd Pump**\n    \n    - Il **Crowd Pump** (es. GameStop o Dogecoin su Reddit) non mira a truffare, ma nasce dalla massa che si coordina spontaneamente per alzare un prezzo.\n    - Nel **Crowd Pump** manca una leadership chiara, il pump è più graduale e spesso viene spinto da motivazioni ideologiche o meme virali.\n- **Tecniche di manipolazione avanzata**\n    \n    - Uso di immagini obfuscate per evitare che i bot leggano il nome della cripto in anticipo.\n    - Sistemi di affiliazione per incentivare la crescita dei canali Telegram.\n- **Dinamica temporale degli eventi**\n    \n    - I pump si organizzano spesso nel pomeriggio europeo, segno che i manipolatori potrebbero risiedere in questa area geografica.\n- **Caso studio di YoBit**\n    \n    - YoBit ha pubblicamente annunciato un pump su Twitter, scatenando reazioni negative nella community.\n- **Analisi sentimentale e crowd behavior**\n    \n    - Hanno analizzato Reddit per capire come Dogecoin è esploso grazie a un semplice post: _\"Let’s make Dogecoin a thing. That’s it, that’s the post\"_.","x":4236,"y":-200,"width":780,"height":600,"color":"5"},
		{"id":"68b193c5004cfe21","type":"text","text":"# ERC-20 - Fungible Tokens (i.e. Coin Secondari)\n\nLo standard ERC-20 prevede nello SC delle funzioni per definire\n\n- L'identità del token, e.g. `name()`, `symbol()`;\n- La sua distribuzione, e.g. `totalSupply()` restituisce la quantità massima possibile di token sulla BC), `balanceOf()` restituisce il saldo di un certo indirizzo;\n- I suoi trasferimenti, e.g. `transfer()` che banalmente invia dei token ad un indirizzo, `transferFrom()` che specifica mittente e destinatario, previa approvazione data dalla funzione `approve()`;\n\nVersioni più elaborate che estendono le funzionalità di ERC-20 possono includere operazioni di ***minting*** (i.e. creazione di nuovi token) e ***burning*** (i.e. distruzione), o di `pause`/`unpause` (i.e. blocco o sblocco tutte le transazioni relative ai token, potenzialmente per evitare il propagarsi di errori o per motivi di sicurezza). Tutto questo non rientra strettamente in questo standard, ma è compatibile con esso.\n\nCi sono diversi motivi per cui potrei voler creare un ERC-20, ad esempio:\n\n- Implementare un sistema di pagamento interno ad un'***applicazione***;\n- Usarlo per gestire la ***governance***, un po' come avviene con le azioni in borsa: più coin di governance di un determinato tipo possiedo, più ho potere decisionale in quell'ambito;\n\t- Più in generale si parla di ***rappresentanza di asset***. Questo tipo di token può rappresentare il grado di possesso di un'immobile, di una società o anche di un NFT!\n- Implementare uno ***stablecoin***, i.e. un coin il cui valore è legato ad una ***moneta fiat***;\n- Per puro ***fine speculativo***, i.e. spero che la gente per qualche motivo riponga fiducia nel mio token facendolo crescere di valore...\n\t- ... per poi eventualmente disinvestire tutto e scappare con i soldi alle Maldive. Questo chiaramente sarebbe illegale in una finanza controllata, ma (guess what) la DeFi non è affatto regolamentata. Vedi ***Rug Pull***.","x":7026,"y":-6491,"width":780,"height":836,"color":"4"},
		{"id":"dcba45b3aa4e8ffc","type":"text","text":"# Sottomultipli\n\nTutte le BC hanno un livello di granularità oltre il quale il coin non è ulteriormente divisibile (... in prima approssimazione, vbb).\n\nPer ***Bitcoin*** è il ***satoshi*** ($10^{-8}\\,\\BTC$), in Ethereum è il ***wei*** ($10^{-18}\\,\\ETH$), spesso usato come ***Gwei*** ($10^9\\text{wei}=10^{-9}\\,\\ETH$, il wei è troppo piccolo).","x":5886,"y":-5855,"width":600,"height":200,"color":"4"},
		{"id":"b0e15795235728f2","type":"text","text":"# Simultaneità e Fork\n\nNonostante sia probabilisticamente raro, cosa succede se due miners risolvono insieme?\n\nEscludiamo il caso in cui uno dei due è più veloce a comunicarlo e a farlo approvare, e diciamo che il server `A` convince alcuni miner ad allungare la blockchain con il proprio blocco e che `B` convince i restanti con il suo. D'altronde \"randomized consensus\" significa proprio questo: \"`è talmente improbabile che qualcuno risolva che quando succede mi convinco che sia un caso isolato e accetto, assumendo implicitamente che tutti quanti accetteranno questo mio stesso blocco`\". Questa situazione rompe esattamente questa assunzione.\n\nQuesto porta in pratica alla creazione di una ***fork*** (i.e. ci sono due diversi ***branch***). Diciamo che tutti concordano inizialmente su `XYZ`. Sia `A` che `B` usano come hash del blocco precedente quello di `Z`. Se però ho approvato `XYZA`, il mio \"blocco precedente\" diventa `A`. Quando mi arriva `B` vedo subito l'incongruenza, e mi pongo il problema: gli altri stanno lavorando su una Blockchain diversa dalla mia? Chiedo allora agli altri gli hash dei loro ultimi blocchi, arrivando a ricostruire la presenza dei branch divergenti: `XYZA` ed `XYZB`. Come si ***riconcilia***?\n\nL'idea è che una delle due catene si estenderà prima dell'altra, i.e. uno dei due gruppi di miner troverà il blocco successivo prima degli altri (se i branch hanno la stessa lunghezza, continuo nel dubbio a lavorare sul primo che ho approvato: fino a prova contraria, quella è la \"vera\" Blockchain). Se quelli che lavorano su `XYZA` trovano per primi `XYZAC`, con un processo simile a quello descritto in precedenza tutti quanti saranno in grado di ricostruire i branch divergenti, ma stavolta una delle due catene (sia essa la principale o l'\"alternativa\") risulterà più lunga. A questo punto, chi aveva quella più corta farà marcia indietro e si adeguerà all'altro gruppo, ripristinando la consistenza globale. Ciò si chiama ***regola della catena più lunga***.\n\nPotrebbe ovviamente succedere di nuovo che due miner nei due blocchi risolvano insieme e che quindi generino nello stesso sottogruppo due chain `XXXAD` e `XXXBC`, ma l'idea è che a livello probabilistico prima o poi uno dei due si renda conto dell'errore.\n\nLa *rule of thumb* è che prima di approvare in via definitiva le transazioni si aspetta di impilare altri 6 blocchi. Questo riduce quasi del tutto (ma non annulla!) la possibilità di sbagliare (e.g. come caso isolato, nel 2013 a causa di un errore SW c'è stata una fork di 24 blocchi).\n\nConsiderando che si aggiunge circa un blocco ogni circa $10$ minuti, prima di essere certi di un pagamento in Bitcoin bisogna aspettare all'incirca un'ora.","x":3456,"y":-6550,"width":780,"height":895,"color":"4"},
		{"id":"340205e6a9b86c6e","type":"text","text":"# Altre Considerazioni\n\n- Il paper stima che il wash trading abbia generato **$3.4 miliardi di volume artificiale**, pari a circa il **10% del volume totale degli NFT su Ethereum**.\n- Viene fatta una distinzione chiara tra due strategie di wash trading:\n    - **Sfruttare il sistema di reward dei marketplace** (più efficace, 80% delle operazioni in profitto e un guadagno medio di **$1.055M per operazione su LooksRare**).\n    - **Gonfiare artificialmente il prezzo di un NFT e rivenderlo** (rischioso, con un successo del **50% e guadagni molto più incerti**).\n    - Il paper evidenzia che la maggior parte delle operazioni dura **meno di 10 giorni** (**26% durano solo un giorno**, **52% durano meno di 10 giorni**). Questo conferma che è una strategia a breve termine per massimizzare i guadagni velocemente.\n- Il **27% degli account coinvolti** nel wash trading è responsabile di **quasi il 73% delle attività**, indicando che si tratta di un gruppo ristretto di attori che eseguono queste operazioni ripetutamente.\n- Il wash trading sugli NFT avviene soprattutto con\n\t- **Round-trip trading (60%)** - Due account si scambiano lo stesso NFT più volte.\n\t- **Schemi circolari (20%)** - Tre o più account fanno girare l’NFT tra loro.\n\t- **Self-trading (7.6%)** - Un singolo account vende NFT a se stesso.\n- Un'operazione specifica su LooksRare ha visto due account scambiarsi lo stesso NFT **otto volte in meno di un’ora**, generando un volume di **5.733 ETH** e incassando **$1.1M in reward LOOKS** con un meccanismo di riduzione progressiva del prezzo.\n- Alcuni wash trader hanno sfruttato il sistema di \"evoluzione\" di alcune collezioni NFT (es. OG:Crystals), dove ogni vendita cambiava alcune proprietà visibili dell’NFT, rendendolo più raro e aumentando il valore percepito.\n- Foundation **non ha casi di wash trading** perché ha **fee troppo alte (15%)**, rendendo la pratica economicamente sconveniente.\n- LooksRare è il marketplace più coinvolto nel wash trading, con **oltre l’84% del volume generato artificialmente**, mentre OpenSea ha un impatto molto minore (0.49%).","x":5796,"y":-1253,"width":780,"height":784,"color":"5"},
		{"id":"8ae9d77db5d92e7f","type":"text","text":"# From Distributed Systems","x":-1200,"y":-4148,"width":489,"height":140,"color":"6"},
		{"id":"246a476e166d1303","type":"text","text":"# [Materiale valido (Di Ciccio)](https://drive.google.com/drive/folders/1BUlKuJIxB6_HxisGTIoDneJFWF7Ihla3)\n\n# [DeFi Course](https://defi-learning.org/f22)","x":-2280,"y":-4225,"width":680,"height":294,"color":"1"},
		{"id":"f7ec2b633006125f","type":"text","text":"Esame 2025/26\n\n- homeworks verso la fine del corso con deadline;\n\t- mandatory, se li faccio entro deadline punti bonus (max 3)\n- group report (pdf) and presentation (slides in class)\n\t- mandatory, se si fa bene punti bonus fino a 15 punti (10 report + 5 presentazione)\n- Scritto\n","x":-2280,"y":-3840,"width":680,"height":320},
		{"id":"9f6e59f539e508ef","type":"text","text":"# lec 23/09\n\nel salvador usa btc come currency\n\npolymarket? prediction market based on blockchain\n\n\"we're approaching the alt season\" (??)\n\ncash ti da privacy, ma se sono in un sistema credito/debito devo sapere chi contrae il debito.\n\n(non c'è più l'oro come controvalore -> fractional reserve)\n\ncarta di credito -> no privacy e serve intermediario\n\nvogliamo best of both worlds: privacy e nessun intermediario dal mondo del cash e online payments, reversibility da credit card. però un intermediario fa anche da garante. e che se fa? non solo: non posso avere un file che rappresenta cash se non so di chi è: il proprietario deve firmarlo (lack of anonimity). E poi double spending. vedi la nota a dx.\n\nperché non ci piaccono le central authorities? \n\n- censura, chi cede denaro e chi riceve devono concordare la stessa auth, transaction costs (pure BC eh...). vabbè siamo anarchici dai\n\npure quello della banca si chiama ledger, ma è centralized.\n\nora, centralized = stella, decentralized = stella di stelle, distributed = grafo \"omogeneo\" (appare come singolo sistema con molti nodi, contro la stella di stelle che appare come \"tanti responsabili\"). in questi ultimi due contesti un singolo nodo può fare poco, rispetto a tutti gli altri insieme\n\nbitcoin è così mainstream che i coin delle altre blockchain si chiamano altcoin.\n\nmarket capitalization = \\#coins \\* valore_singolo_coin\n\nvisto l'hype della struttura dati blockchain, la gente mo vuole usarla per tutto. non è sempre una buona idea.","x":-2280,"y":-3480,"width":680,"height":1020},
		{"id":"94b314070ee4465e","type":"text","text":"# idee presentazione/progetto\n\n- scrivere una roba di AI? Un'APP? non ho capito\n- creare un nostro token, magari su una test blockchain, così non paghiamo\n- creare un NFT, stessa cosa di prima","x":-3400,"y":-3928,"width":646,"height":488},
		{"id":"34c1452fcb19ba4f","type":"text","text":"# 30/09\n\nsu ethereum ci sta wrapped ether perché è più facile fare operazioni nelle LP con i token che con il coin\n\ntrovare collision hash -> calcola hash per 2^{#bit dell'hash} elementi per trovare almeno due elementi che collidono. Se #=256 servono miliardi di miliardi di anni. Ma un QC?\n","x":-2280,"y":-1732,"width":680,"height":492},
		{"id":"ae9a8a2e0696f060","type":"text","text":"# Lec 24/09\n\nhash function (overview)\n\npost quantum computing è un po' tosta seguirlo da metà lezione in poi","x":-2280,"y":-2360,"width":680,"height":500},
		{"id":"90bd914ffad09146","type":"text","text":"# Lezioni Di Ciccio - 00 Introduction\n\nla BC non è un DB, non salva dati (tipo il saldo di un account) ma transazioni (poi ovviamente puoi farti un piccolo DB riassuntivo locale per fare rapidamente il punto della situazione senza rileggere ogni volta tutta la storia). Di per sé è una data structure, ma spesso si intende l'intero environment che la supporta.\n\nGli smart contracts sono anche detti Chain Code su BC più rigorose.\n\nweb3, t-apps? middleware\n\ndice che \"cryptocurrency\" è impreciso, perché \"currency\" richiede un'entità \"garante\" (puoi prendertela con lo stato, tipo)\n\nmattone base della BC: l'account `0xA` manda dei soldi all'account `0xB` tramite una transazione `0xT`. Cose da fare:\n\n- Assicurarsi che chi ordina la transazione sia autorizzato a farlo. Con la banca abbiamo username/password, OTP, token, ecc... Qua si fa con la firma digitale.\n\t- nota che con una banca avere quei metodi di accesso significa che ti sei prima fatto identificare come essere umano, mentre qui non serve\n\t- nota anche che questo implica che non è detto che chi è in possesso della chiave privata giusta sia anche l'owner dell'account di partenza, è solo \"quello autorizzato a fare questa transazione\". può ad esempio essere un account aziendale di cui diversi umani hanno la chiave privata\n- Externally Owned Account (EOA) - accounts owned by entities that are not on the chain (humans, bots, AI tools, dogs, ...). e l'alternativa? ovviamente gli Smart Contracts, che possono essere la sola entità a controllare un account (prima degli SC esistevano solo EOA)\n\t- anche la creazione di un account è una transazione scritta sulla BC, quindi si può vedere se un account è EOA o generato da SC\n- le private keys sono in genere tenute in un PK manager nel wallet, e a volte vengono perse o rubate (alcuni fondi sono frozen)\n- per bitcoin tutta sta roba è simile ad un assegno (ID, sender, recipient (causale tipo), amount, timestamp, signature), per ETH è un po' diverso\n\nUn ledger è una APPEND-ONLY LIST di transactions.... quasi, perché non posso avere duplicati -> ogni transaction è unica, quantomeno per l'ID. A livello tecnico è quindi un ***totally ordered*** set without complement, i.e. ogni transaction avviene sempre ***dopo*** un'altra e ***prima*** di un'altra. Ci sono eccezioni? Sì, tipo Iota implementa un ordine parziale in cui rilassa un po' questa condizione, ma al momento non ci interessa. L'altra eccezione è la mempool delle transactions non ancora scritte sulla BC, ma appunto, non sono ancora scritte sulla BC. Tutto questo per evitare il double spending.\n\naxe-infinity? permetteva ai giocatori di avere un account crypto sul gioco. tutti gli account convergevano all'account del gioco stesso, e c'era una rete  che faceva le conversioni (relay network, una dozzina di nodi). gli hanno fatto un 51% attack (rewriting history). ci stanno gli oracle che si assicurano che ciò che avviene fuori dalla chain sia registrato anche sulla chain nel giusto ordine.\n\nora, visto che siamo in un sistema distribuito ogni nodo deve avere contezza dell'intero ledger. but nodes come and go, and ledger is enorme. Che si fa? \"come in passato i contabili non avevano un solo libro, ma molteplici, anche qui dividiamo\". Nascono i blocchi, che a loro volta vanno ordinati. Come? Con gli hash. E con i merkle tree (too soon). Ma a un nuovo nodo non do solo gli hash. Inizialmente dovevo dare tutta la BC, di recente ci sono sistemi (mechanical breakpoints) che ti permettono di scaricare solo gli ultimi blocchi. e comunque il blocco è l'equivalente del tempo in una BC: per questo hanno lunghezza variabile ma bene o male rate di aggiunta alla BC costante (e.g. bitcoin \\sim 10 min, ETH \\sim 12s). Questo per quanto riguarda i nodi del DS, dopodiché i wallet sono \"light client\" che salvano solo gli hash (o meglio, solo gli header).\n\nIn prima approssimazione assumiamo che ogni partecipante alla BC abbia tutta l'info della BC (escludiamo quindi wallet & co). Un nodo poco potente in un contesto PoW rischia di non vedere mai approvato il proprio blocco. Questo porta ad un folle generale aumento di potenza computazionale che culmina sempre più spesso nel preferire la PoS.\n\n\"non importa se la transazione è valida (o giusta, o vera) o meno, l'unica cosa che importa è che la maggioranza dei nodi del DS concordi che è stata eseguita\". Solo il DS decide cosa è vero e cosa no (i.e. cosa avviene e cosa no). L'obiettivo della BC è solo quello di essere un ledger, non di garantire CIA triad e simili.\n\npoi parla delle fork e della regola dei 6 blocchi (\\sim 1h su bitcoin) e di come non ci sia nessun sistema swift di turno a fare da garante per l'approvazione della tua transazione. le fees poi funzionano (anche) perché non essendoci un perfect distributed clock non posso usare il timestamp per sapere quali transactions hanno la precedenza nella mempool per essere inserite in un blocco (e dunque \"bribery\", come dice lui). Se ho capito bene dice pure che magari io non pago, ma magari un'altra transazione che prende come input il mio output ha fee altissime e al sistema conviene ficcare dentro anche la mia.\n\nprocede a spiegare la PoW come love affair - \"per conquistarmi devi metterci il cuore, provare e fallire\". Incredibile.\n\nnon confondere mempool (set delle transazioni in attesa in un certo nodo, che quindi cambia da nodo a nodo) con la mining pool (gruppo di miner che uniscono gli sforzi computazionali per risolvere più rapidamente la PoW).\n\nGli SC sono pezzi di codice touring-complete. Questo viene poi tradotto in bytecode (una specie di assembly che però può runnare su diverse piattaforme). Più il codice è complesso, più sforzo computazionale richiede per essere eseguito più richiede ***gas***\n\n- paga chi invoca la funzione in questione! ma chi riceve? lui dice \"the publisher\", ma di cosa? non dello SC, perché sennò scriverebbero tutti codice super complesso per intascarsi fees giganti. ah ok il publisher intende il miner che ha fatto approvare quel blocco forse. o tutti? no sarebbe assurdo, è zero scalabile sta cosa).\n- Stessa differenza che c'era tra mainframe e terminal (... cioè? il mainframe offriva la cpu e il terminale era l'invoker?). Visto che tutto su una BC è una transazione, lo è anche l'invocazione di funzione (la chiamata avviene come payload della transazione). Ok, ma chi lo esegue? Preventivamente chi vuole proporre il blocco in cui è contenuta, dopodiché se non ci sono errori e quel blocco viene approvato lo SC verrà eseguito dall'intero DS (ogni nodo deve eseguirlo per vederne le conseguenze e aggiornare di conseguenza la BC, il miner non condivide il risultato, ma il codice).\n\nOvviamente anche la creazione di un nuovo account è una transaction: il sistema sceglie un target address inutilizzato e \"da ora in poi è tuo\".\nHopefully chi sviluppa SC mette il codice su GitHub (sulla blockchain c'è solo versione binary, illeggibile).\n\nOk ma quindi se sono un nuovo nodo non solo devo scaricarmi tutte le transazioni ma anche rieseguire tutte le funzioni degli SC? ...ni. Esistono dei breakpoints in cui la BC ti dice \"questo era lo stato condiviso al 100% (?) a questo punto, scarica/esegui solo da qui in poi\".","x":-6307,"y":-3978,"width":1207,"height":2378},
		{"id":"5becda78c63e7704","type":"text","text":"# 01 - Preliminaries","x":-6307,"y":-1560,"width":1207,"height":987},
		{"id":"6b1f1894ab710644","x":-7440,"y":-3043,"width":828,"height":508,"type":"text","text":"# intro al seminario\n\nBC for notorization? era tipo un seminario quell'anno\n\nSta di fatto che parla di web 3.0 (SC eseguiti in backend e ho frontend pulito)\n\nriassumendo: SC -> programmability; Transactions -> asset transfer & SC function execution; ledger on DS -> data robustness, traceability & consistency; Hash Signatures -> Authentication/non-repudiation. E tutto questo (da buon DS) in un setting in cui la fiducia tra nodi è solo parziale.\n\nperò il fatto che sia tutto tracciabile ci piace fino a un certo punto -> \"privity\" \"notorization\". \"we want BC to record everything... but not too much\". L'idea è che sì, tu registri tutto, ma devi anche offuscare un po' e/o mostrare cose diverse ad entità diverse. Non ho capito se si chiama davvero CAKE o se è un suo meme. InterPlanetary File System to implement it (na specie di torrent + tor + emule che implementa distributed hash tables DHT, i.e. prendi degli hash e fai tipo sfere del drago). Ciphertext-Policy e Attribute-Based Encryption meaning sono identificato dal mio ruolo e non dalla mia identità (tipo...). L'address è content-based, quindi cambiare pezzi di file = cambiare l'hash (in questo caso l'address, cfr. Torrent su esame DS). in pratica con IPFS non possediamo i dati ma i link ai dati.\n\nvabbè ma come si realizza? con un sistema public key critto con chiavi diverse diversi pezzi di dati. "}
	],
	"edges":[
		{"id":"9c09d891967b6e1f","fromNode":"e23ed681df359267","fromSide":"bottom","toNode":"37be4a9f1c9a0573","toSide":"top"},
		{"id":"03edbc01e8f7e44e","fromNode":"e23ed681df359267","fromSide":"bottom","toNode":"bc974bfebe38a31d","toSide":"top"},
		{"id":"a29e41074f09eec2","fromNode":"7e38a9731b069017","fromSide":"top","toNode":"0187f418b12b8a18","toSide":"bottom"},
		{"id":"8e5e3e7086c629c2","fromNode":"7e38a9731b069017","fromSide":"top","toNode":"b0e15795235728f2","toSide":"bottom"},
		{"id":"ec109a77a5c909b8","fromNode":"7e38a9731b069017","fromSide":"top","toNode":"2825d21211592300","toSide":"bottom"},
		{"id":"28a83161ee8a1420","fromNode":"7e38a9731b069017","fromSide":"right","toNode":"b6a85d26a6d762d8","toSide":"left"},
		{"id":"e21de116395bea6a","fromNode":"e23ed681df359267","fromSide":"top","toNode":"7e38a9731b069017","toSide":"bottom"},
		{"id":"e3cc9ca3cfb7f488","fromNode":"0187f418b12b8a18","fromSide":"left","toNode":"66e789f3b5a0ec37","toSide":"right"},
		{"id":"7f018e44677a92cc","fromNode":"e23ed681df359267","fromSide":"top","toNode":"f73c6a4e69389480","toSide":"bottom"},
		{"id":"51420e3b1c786b37","fromNode":"e23ed681df359267","fromSide":"right","toNode":"c0bc01d1e65c717d","toSide":"left"},
		{"id":"379d92bceab89f78","fromNode":"e23ed681df359267","fromSide":"right","toNode":"420c6a87906609da","toSide":"left"},
		{"id":"e5a88b36d318a4b4","fromNode":"c0bc01d1e65c717d","fromSide":"bottom","toNode":"40d21f642132b8a5","toSide":"top"},
		{"id":"9cf4143d05f00343","fromNode":"c0bc01d1e65c717d","fromSide":"top","toNode":"ef073ac9df95dbd1","toSide":"bottom"},
		{"id":"0547737486b5b74d","fromNode":"c0bc01d1e65c717d","fromSide":"left","toNode":"54b251eb5f580875","toSide":"bottom"},
		{"id":"86a655b4dc5c1214","fromNode":"420c6a87906609da","fromSide":"right","toNode":"c0bc01d1e65c717d","toSide":"left","label":"DEX"},
		{"id":"d6b93699d47a0cdb","fromNode":"40d21f642132b8a5","fromSide":"bottom","toNode":"bd58e931f55c72e9","toSide":"top"},
		{"id":"f6b73b9dea669080","fromNode":"40d21f642132b8a5","fromSide":"bottom","toNode":"85fc8a05c99ff340","toSide":"top"},
		{"id":"1a99c65484401585","fromNode":"420c6a87906609da","fromSide":"right","toNode":"40d21f642132b8a5","toSide":"left","label":"DEX"},
		{"id":"af9f49327bdeb417","fromNode":"420c6a87906609da","fromSide":"bottom","toNode":"af09c1c6572f2db1","toSide":"top","label":"CEX"},
		{"id":"d1a719a7b987a4f1","fromNode":"420c6a87906609da","fromSide":"bottom","toNode":"85fc8a05c99ff340","toSide":"top","label":"DEX"},
		{"id":"f823ea86f8eeb34d","fromNode":"b0e15795235728f2","fromSide":"right","toNode":"2825d21211592300","toSide":"left"},
		{"id":"c941baa6d7992c76","fromNode":"ef073ac9df95dbd1","fromSide":"top","toNode":"68b193c5004cfe21","toSide":"bottom"},
		{"id":"d23bba83377ce2f7","fromNode":"ef073ac9df95dbd1","fromSide":"right","toNode":"8689b6a4e7e83f20","toSide":"left"},
		{"id":"f0125982149f4144","fromNode":"bd58e931f55c72e9","fromSide":"bottom","toNode":"8a6b328ab8c2b7cf","toSide":"top"},
		{"id":"4f448f229c1d1805","fromNode":"bd58e931f55c72e9","fromSide":"right","toNode":"ca2750dfcadcc2cb","toSide":"top"},
		{"id":"f4b1a8c5eac4412d","fromNode":"8a6b328ab8c2b7cf","fromSide":"right","toNode":"ca2750dfcadcc2cb","toSide":"left"},
		{"id":"a8736eb024c54f3b","fromNode":"8a6b328ab8c2b7cf","fromSide":"bottom","toNode":"32adeffc3526776e","toSide":"top"},
		{"id":"82e5a1821f53de66","fromNode":"8a6b328ab8c2b7cf","fromSide":"bottom","toNode":"313585cc249c3349","toSide":"top"},
		{"id":"1c91256870aeb260","fromNode":"ca2750dfcadcc2cb","fromSide":"bottom","toNode":"32adeffc3526776e","toSide":"top"},
		{"id":"750a76cc4b46fbed","fromNode":"d006bd8a921bcf16","fromSide":"top","toNode":"4e3449fd770ccfb1","toSide":"top"},
		{"id":"fe7b783df9081f79","fromNode":"68b193c5004cfe21","fromSide":"top","toNode":"d006bd8a921bcf16","toSide":"bottom"},
		{"id":"130059f9f4e8ec9c","fromNode":"85fc8a05c99ff340","fromSide":"bottom","toNode":"340205e6a9b86c6e","toSide":"top"},
		{"id":"7a787f3c67ed24ee","fromNode":"54b251eb5f580875","fromSide":"top","toNode":"dcba45b3aa4e8ffc","toSide":"bottom"},
		{"id":"dcd65893ed152d71","fromNode":"af09c1c6572f2db1","fromSide":"bottom","toNode":"cf185f8837214b5e","toSide":"top"},
		{"id":"2872607ec72e4e53","fromNode":"cf185f8837214b5e","fromSide":"bottom","toNode":"962f6c4b3c0be25d","toSide":"top"},
		{"id":"e12e4f9a9101eaad","fromNode":"cf185f8837214b5e","fromSide":"left","toNode":"d1bdc75d4a561ac5","toSide":"right"},
		{"id":"e68438bc3b441bbe","fromNode":"962f6c4b3c0be25d","fromSide":"bottom","toNode":"f25620bcdd9ec501","toSide":"top"},
		{"id":"21322b864022341d","fromNode":"8ae9d77db5d92e7f","fromSide":"right","toNode":"e23ed681df359267","toSide":"left"}
	]
}