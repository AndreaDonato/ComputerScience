{
	"nodes":[
		{"id":"6033fbd5014b0cba","x":-200,"y":-140,"width":560,"height":360,"type":"text","text":"# PND\n\n6o67wtg\n\nACME è una rete virtuale in ambiente sapienza sulla quale implementare le cose del corso (sulla quale girano circa 15 VM). Usa una VM con Katharà, NON fare sta roba sul pc direttamente perché esplode tutto\n\ncompleteness\ncorrectness\neffort (scrivi più di 1-2 pagine nel report, che sennò si incazza)"},
		{"id":"e5fc1848775e11e1","x":-200,"y":268,"width":560,"height":992,"type":"text","text":"- find - looks for files (by name, size, ...)\n- la shell ha comandi interni ad essa ed esterni. con `which ls` trovi il percorso dei comandi esterni (se è interno non restituisce niente). `ls` è esterno\n- `man comando` restituisce il manuale di `comando`.\n- `apropos comando` ti dice cosa fa `comando`\n- `info comando` è la vecchia versione di `man comando`, ma su editor (man è su terminale)\n- `alias` restituisce tutte le shortcut alternative per i comandi\n\t- `ll` è `ls -afD`, se fai `ll /proc/` ti escono cose che non sono né `d` (directory) né `-` (file), ma `c` (??) o `s` (file compresso??) \n- cosa sono i gruppi `shadow` e `dialout` ???\n- s al posto di x = prima dell'esecuzione cambia la proprietà del file. `which passwd` e poi `ll /output/passwd` (vedrò la `s` sull'user, quando lo esegue il possesso passa a root). Vedi rec\n\t- mi sa che devi chiedergli cosa recuperare... SO2?\n\n`shadow` sono le password pare, e sono separate dal file `passwd`!!\nQuella NON è una RegEx!! è una EXPANSION del bash\n\n`for i in 'la -1 *a.txt'; do echo $i.backup; done'\n\nfa un backup di ....... guarda la rec. link simbolici con `ln`. \n\nanche per una parte sui permessi, è circa l'una e mezza \n\n`cat` = concatenate (cerca le motivazioni dietro ai comandi!!!)\n\n`echo '3 is a number' | wc -w | tr '[0-9]' '[n-z]'` che fa sta roba?\n\n- echo manda in output la frase\n- la prende word count (wc) con opzione -w (conta sola le parole), quindi restituisce 4\n- tr.....\n\n128 è 10000000...."},
		{"id":"213cb7424970c6c4","x":-398,"y":1400,"width":478,"height":1400,"type":"text","text":"fuzzy attack?\n\nwireshark e simili modificano direttamente la NIC per entrare in promiscuous mode? questa cosa diventa difficile se la rete è segmentata (faccio diverse VLAN? o comunque lo switch è più intelligente del previsto e manda la roba solo al vero destinatario)\n\nARP requests are always broadcast ethernet packets\n\nposso collegare uno switch ad un altro switch. questo significa che ad una porta possono corrispondere più MAC\n\nARP tables for hosts, called CAM for switches (HW-based, so fast. in fact, destination is the very first info in ethernet so that switch can decide output port asap)\n\n- CAM overflow - costringo lo switch a non ricordarsi le cose in modo da fargli fare broadcast ogni volta (mi interessa per fare sniffing, altrimenti i packet non mi arrivano!)\n\nInternet non è una grande ethernet network perché sta roba si basa sui broadcast. per risolvere questo problema crei IP. similmente a come poi visto che è inefficiente fare routing su cose troppo grandi dividi in ISP (e poi BGP ecc)\n\nSapienza è connessa a GAR (?) che collega tutte le università italiane\n\nbroadcast su IP poco comune (satelliti, ping), di norma si ignora (per ovvi motivi). multicast più comune, specie su IPv6\n\nClassi ABCDE: guarda il primo 0. \n\n- A - 0xxxxxxx fino a 127\n- B - 10xxxxxx da 128 a 191, ecc...\n- C\n- D - 1110xxxx (multicast)\n- E - (unused) 111110xx\n\nnon si usa più perché la classe A è troppo grande, quindi CIDR (parte network e parte host)\n\nprivate networks (RFC1918, i.e. non-routable IPs) definisce 10.xxx.xxx.xxx, 172.16.xxx.xxx e 192.168.xxx.xxx (guarda slide 34)\n\nbroadcast è sempre \"tutti 1 nella host part\", anche se questo non produce in generale in CIDR un 255!"}
	],
	"edges":[]
}