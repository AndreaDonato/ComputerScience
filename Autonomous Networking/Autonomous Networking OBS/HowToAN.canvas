{
	"nodes":[
		{"id":"2795cbd69099d104","type":"text","text":"# AN\n\nautonomo nel senso che\n\n- non gli do indicazioni aggiuntive\n- né risorse\n- è \"intelligente\", nei limiti dell'AI\n\t- si adatta ai cambiamenti ambientali e/o li prevede\n\n","x":-83,"y":20,"width":523,"height":400},
		{"id":"88aeb7f35a9f1438","type":"text","text":"a drownet is a network of drows.\n\n","x":-395,"y":-10,"width":250,"height":60},
		{"id":"4b21c821ca9a99a5","type":"text","text":"# Radio Frequency Identification (RFID)\n\nÈ un sistema che consta di tre componenti:\n\n- ***Tag*** - Circuiti molto semplici, al punto che spesso sono integrati in uno sticker. Identificati da un codice univoco tipicamente a 96 bit, possono essere alimentati (attivi) e non (passivi). Il loro ruolo è rispondere ad uno stimolo EM esterno;\n- ***Reader*** - Dispositivi che emettendo un segnale EM forniscono ai Tag la potenza necessaria a rispondere;\n- ***Server*** - Riceve e processa i dati ricevuti dal Reader.\n\nI Tag passivi sono spesso utilizzati per l'identificazione (e.g. come alternativa al codice a barre), in quanto sono low cost, battery free e non necessitano line of sight.\n\nQuando un'antenna richiede gli ID di un gruppo di Tag, questi rispondono simultaneamente. Serve un protocollo semplice per evitare le collisioni, e viene rispolverato ***Aloha*** in versione un po' più semplice: il reader dice a tutti `generate un numero casuale da 1 a N, a ogni slot temporale decrementatelo e rispondete quando arriva a 0`. L'efficienza di questa roba è $\\sim 37\\%$, altrimenti c'è la sua variante ***Tree Slotted Aloha***: ogni slot in cui c'è collisione di $N$ Tag diventa la radice di un albero che iterativamente si occupa di risolvere solo quegli $N$ Tag (più facile a farsi che a dirsi).","x":1009,"y":559,"width":581,"height":637,"color":"4"},
		{"id":"3c75d95894ed422c","type":"file","file":"SlottedAloha.png","x":1788,"y":616,"width":700,"height":181},
		{"id":"5b6eb8218c9cdbcf","type":"file","file":"PureAloha.png","x":1788,"y":855,"width":700,"height":181},
		{"id":"40cc347011752646","type":"file","file":"RFID.png","x":1100,"y":1251,"width":400,"height":301},
		{"id":"b00aab8306e43b32","type":"text","text":"# Aggiunte RFID\n\nquesti protocolli evitano le collisioni, e sono detti sequenziali. ci sono anche quelli che le gestiscono, detti concorrenti.\n\nbinary splitting divide i tag in due gruppi ricorsivamente. Come? Inizio con tutti i tag con counter 0. rispondono alla query solo chi ha 0, quindi all'inizio tutti e c'è collisione. Ogni tag genera un bit casuale che somma al counter. Così in media stamo 50 e 50. slides\n\nslide 28, il formulone è una binomiale ricorsiva\ntutta la megaparentesi è una roba ricorsiva, la prima riga è il caso base.\n\ntutto questo è comandato dal controller, mentre se uso aloha è distribuito (credo, controlla)\n\nl'efficienza misurata come query riuscite su totali ha senso se ogni query prende lo stesso tempo, altrimenti devo tenerlo in considerazione.\n\nsul grafico di pag 42 c'è un picco: when I overstimate the number of slots I get best results. better have much more idle slot (last much less than a collision slot, that's $\\beta$ from some slide before)\n\nin TSA i tag devono ricordare la collisione precedente (so she said, siamo sicuri?). la performance è 43% circa.","x":200,"y":559,"width":620,"height":621}
	],
	"edges":[
		{"id":"daded5bdc98601ae","fromNode":"2795cbd69099d104","fromSide":"bottom","toNode":"b00aab8306e43b32","toSide":"top"},
		{"id":"301a5ebe52db2e5e","fromNode":"4b21c821ca9a99a5","fromSide":"bottom","toNode":"40cc347011752646","toSide":"top"},
		{"id":"496e20920231146c","fromNode":"4b21c821ca9a99a5","fromSide":"right","toNode":"3c75d95894ed422c","toSide":"left","label":"Circa"}
	]
}